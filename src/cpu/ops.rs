use cpu::reg::{Register, Flag};

#[derive(Clone, Copy)]
pub enum AddressingMode {
    Immediate,
    Absolute,
    AbsoluteX(bool),
    AbsoluteY(bool),
    ZeroPage,
    ZeroPageX,
    ZeroPageY,
    Indirect,
    IndirectX,
    IndirectY(bool),
}

#[derive(Clone, Copy)]
pub enum Operation {
    // Storage
    Load(Register, AddressingMode),
    Store(Register, AddressingMode),
    Transfer(Register, Register),

    // Math
    Add(AddressingMode),
    Inc(Option<Register>, Option<AddressingMode>),
    Dec(Option<Register>, Option<AddressingMode>),
    Sub(AddressingMode),

    // Bitwise
    And(AddressingMode),
    Asl(Option<AddressingMode>),
    Bits(AddressingMode),
    Xor(AddressingMode),
    Lsr(Option<AddressingMode>),
    Or(AddressingMode),
    Rol(Option<AddressingMode>),
    Ror(Option<AddressingMode>),

    // Branch
    Branch(Flag, bool),

    // Jump
    Jump(Option<AddressingMode>),
    Ret(bool), // true = rts | false = rti

    // Registers
    Flag(Flag, bool),
    Compare(Register, AddressingMode),

    // Stack
    Stack(Register, bool), // true = push | false = pull

    // System
    Break,
    Nop(Option<AddressingMode>),

    // Illegal
    Lax(AddressingMode),
    Sax(AddressingMode),
    Dcp(AddressingMode),
    Isb(AddressingMode),
    Slo(AddressingMode),
    Rla(AddressingMode),
    Sre(AddressingMode),
    Rra(AddressingMode),
    Aac(AddressingMode),
    Asr(AddressingMode),
    Arr(AddressingMode),
    Atx(AddressingMode),
    Axs(AddressingMode),
    Sa(Register, AddressingMode),

    // Unknown Opcode
    BadOP(u8),
}

impl From<u8> for Operation {
    fn from(op: u8) -> Operation {
        use self::Operation::*;
        use self::AddressingMode::*;
        use self::Register::*;
        use self::Flag::*;

        match op {
            0x00 => Break,
            0x01 => Or(IndirectX),
            0x05 => Or(ZeroPage),
            0x06 => Asl(Some(ZeroPage)),
            0x08 => Stack(P, true),
            0x09 => Or(Immediate),
            0x0A => Asl(None),
            0x0D => Or(Absolute),
            0x0E => Asl(Some(Absolute)),
            0x10 => Branch(Negative, false),
            0x11 => Or(IndirectY(true)),
            0x15 => Or(ZeroPageX),
            0x16 => Asl(Some(ZeroPageX)),
            0x18 => Flag(Carry, false),
            0x19 => Or(AbsoluteY(true)),
            0x1D => Or(AbsoluteX(true)),
            0x1E => Asl(Some(AbsoluteX(false))),
            0x20 => Jump(None),
            0x21 => And(IndirectX),
            0x24 => Bits(ZeroPage),
            0x25 => And(ZeroPage),
            0x26 => Rol(Some(ZeroPage)),
            0x28 => Stack(P, false),
            0x29 => And(Immediate),
            0x2A => Rol(None),
            0x2C => Bits(Absolute),
            0x2D => And(Absolute),
            0x2E => Rol(Some(Absolute)),
            0x30 => Branch(Negative, true),
            0x31 => And(IndirectY(true)),
            0x35 => And(ZeroPageX),
            0x36 => Rol(Some(ZeroPageX)),
            0x38 => Flag(Carry, true),
            0x39 => And(AbsoluteY(true)),
            0x3D => And(AbsoluteX(true)),
            0x3E => Rol(Some(AbsoluteX(false))),
            0x40 => Ret(false),
            0x41 => Xor(IndirectX),
            0x45 => Xor(ZeroPage),
            0x46 => Lsr(Some(ZeroPage)),
            0x48 => Stack(A, true),
            0x49 => Xor(Immediate),
            0x4A => Lsr(None),
            0x4C => Jump(Some(Absolute)),
            0x4D => Xor(Absolute),
            0x4E => Lsr(Some(Absolute)),
            0x50 => Branch(Overflow, false),
            0x51 => Xor(IndirectY(true)),
            0x55 => Xor(ZeroPageX),
            0x56 => Lsr(Some(ZeroPageX)),
            0x58 => Flag(Interrupt, false),
            0x59 => Xor(AbsoluteY(true)),
            0x5D => Xor(AbsoluteX(true)),
            0x5E => Lsr(Some(AbsoluteX(true))),
            0x60 => Ret(true),
            0x61 => Add(IndirectX),
            0x65 => Add(ZeroPage),
            0x66 => Ror(Some(ZeroPage)),
            0x68 => Stack(A, false),
            0x69 => Add(Immediate),
            0x6A => Ror(None),
            0x6C => Jump(Some(Indirect)),
            0x6D => Add(Absolute),
            0x6E => Ror(Some(Absolute)),
            0x70 => Branch(Overflow, true),
            0x71 => Add(IndirectY(true)),
            0x75 => Add(ZeroPageX),
            0x76 => Ror(Some(ZeroPageX)),
            0x78 => Flag(Interrupt, true),
            0x79 => Add(AbsoluteY(true)),
            0x7D => Add(AbsoluteX(true)),
            0x7E => Ror(Some(AbsoluteX(false))),
            0x81 => Store(A, IndirectX),
            0x84 => Store(Y, ZeroPage),
            0x85 => Store(A, ZeroPage),
            0x86 => Store(X, ZeroPage),
            0x88 => Dec(Some(Y), None),
            0x8A => Transfer(X, A),
            0x8C => Store(Y, Absolute),
            0x8D => Store(A, Absolute),
            0x8E => Store(X, Absolute),
            0x90 => Branch(Carry, false),
            0x91 => Store(A, IndirectY(false)),
            0x94 => Store(Y, ZeroPageX),
            0x95 => Store(A, ZeroPageX),
            0x96 => Store(X, ZeroPageY),
            0x98 => Transfer(Y, A),
            0x99 => Store(A, AbsoluteY(false)),
            0x9A => Transfer(X, SP),
            0x9D => Store(A, AbsoluteX(false)),
            0xA0 => Load(Y, Immediate),
            0xA1 => Load(A, IndirectX),
            0xA2 => Load(X, Immediate),
            0xA4 => Load(Y, ZeroPage),
            0xA5 => Load(A, ZeroPage),
            0xA6 => Load(X, ZeroPage),
            0xA8 => Transfer(A, Y),
            0xA9 => Load(A, Immediate),
            0xAA => Transfer(A, X),
            0xAC => Load(Y, Absolute),
            0xAD => Load(A, Absolute),
            0xAE => Load(X, Absolute),
            0xB0 => Branch(Carry, true),
            0xB1 => Load(A, IndirectY(true)),
            0xB4 => Load(Y, ZeroPageX),
            0xB5 => Load(A, ZeroPageX),
            0xB6 => Load(X, ZeroPageY),
            0xB8 => Flag(Overflow, false),
            0xB9 => Load(A, AbsoluteY(true)),
            0xBA => Transfer(SP, X),
            0xBC => Load(Y, AbsoluteX(true)),
            0xBD => Load(A, AbsoluteX(true)),
            0xBE => Load(X, AbsoluteY(true)),
            0xC0 => Compare(Y, Immediate),
            0xC1 => Compare(A, IndirectX),
            0xC4 => Compare(Y, ZeroPage),
            0xC5 => Compare(A, ZeroPage),
            0xC6 => Dec(None, Some(ZeroPage)),
            0xC8 => Inc(Some(Y), None),
            0xC9 => Compare(A, Immediate),
            0xCA => Dec(Some(X), None),
            0xCC => Compare(Y, Absolute),
            0xCD => Compare(A, Absolute),
            0xCE => Dec(None, Some(Absolute)),
            0xD0 => Branch(Zero, false),
            0xD1 => Compare(A, IndirectY(true)),
            0xD5 => Compare(A, ZeroPageX),
            0xD6 => Dec(None, Some(ZeroPageX)),
            0xD8 => Flag(Decimal, false),
            0xD9 => Compare(A, AbsoluteY(true)),
            0xDD => Compare(A, AbsoluteX(true)),
            0xDE => Dec(None, Some(AbsoluteX(false))),
            0xE0 => Compare(X, Immediate),
            0xE1 => Sub(IndirectX),
            0xE4 => Compare(X, ZeroPage),
            0xE5 => Sub(ZeroPage),
            0xE6 => Inc(None, Some(ZeroPage)),
            0xE8 => Inc(Some(X), None),
            0xE9 | 0xEB => Sub(Immediate),
            0xEC => Compare(X, Absolute),
            0xED => Sub(Absolute),
            0xEE => Inc(None, Some(Absolute)),
            0xF0 => Branch(Zero, true),
            0xF1 => Sub(IndirectY(true)),
            0xF5 => Sub(ZeroPageX),
            0xF6 => Inc(None, Some(ZeroPageX)),
            0xF8 => Flag(Decimal, true),
            0xF9 => Sub(AbsoluteY(true)),
            0xFD => Sub(AbsoluteX(true)),
            0xFE => Inc(None, Some(AbsoluteX(false))), 
            0x04 | 0x44 | 0x64 => Nop(Some(ZeroPage)),
            0x0C => Nop(Some(Absolute)),
            0x14 | 0x34 | 0x54 | 0x74 | 0xD4 | 0xF4 => Nop(Some(ZeroPageX)),
            0x80 | 0x82 | 0x89 | 0xC2 | 0xE2 => Nop(Some(Immediate)),
            0x1C | 0x3C | 0x5C | 0x7C | 0xDC | 0xFC => Nop(Some(AbsoluteX(true))),
            0x1A | 0x3A | 0x5A | 0x7A | 0xDA | 0xFA | 0xEA | 0x02 | 0x12 | 0x22 | 0x32 | 0x42 |
            0x52 | 0x62 | 0x72 | 0x92 | 0xB2 | 0xD2 | 0xF2 => Nop(None),
            0xA7 => Lax(ZeroPage),
            0xB7 => Lax(ZeroPageY),
            0xAF => Lax(Absolute),
            0xBF => Lax(AbsoluteY(true)),
            0xA3 => Lax(IndirectX),
            0xB3 => Lax(IndirectY(true)),
            0x87 => Sax(ZeroPage),
            0x97 => Sax(ZeroPageY),
            0x83 => Sax(IndirectX),
            0x8F => Sax(Absolute),
            0xC7 => Dcp(ZeroPage),
            0xD7 => Dcp(ZeroPageX),
            0xCF => Dcp(Absolute),
            0xDF => Dcp(AbsoluteX(false)),
            0xDB => Dcp(AbsoluteY(false)),
            0xC3 => Dcp(IndirectX),
            0xD3 => Dcp(IndirectY(false)),
            0xE7 => Isb(ZeroPage),
            0xF7 => Isb(ZeroPageX),
            0xEF => Isb(Absolute),
            0xFF => Isb(AbsoluteX(false)),
            0xFB => Isb(AbsoluteY(false)),
            0xE3 => Isb(IndirectX),
            0xF3 => Isb(IndirectY(false)),
            0x07 => Slo(ZeroPage),
            0x17 => Slo(ZeroPageX),
            0x0F => Slo(Absolute),
            0x1F => Slo(AbsoluteX(false)),
            0x1B => Slo(AbsoluteY(false)),
            0x03 => Slo(IndirectX),
            0x13 => Slo(IndirectY(false)),
            0x27 => Rla(ZeroPage),
            0x37 => Rla(ZeroPageX),
            0x2F => Rla(Absolute),
            0x3F => Rla(AbsoluteX(false)),
            0x3B => Rla(AbsoluteY(false)),
            0x23 => Rla(IndirectX),
            0x33 => Rla(IndirectY(false)),
            0x47 => Sre(ZeroPage),
            0x57 => Sre(ZeroPageX),
            0x4F => Sre(Absolute),
            0x5F => Sre(AbsoluteX(false)),
            0x5B => Sre(AbsoluteY(false)),
            0x43 => Sre(IndirectX),
            0x53 => Sre(IndirectY(false)),
            0x67 => Rra(ZeroPage),
            0x77 => Rra(ZeroPageX),
            0x6F => Rra(Absolute),
            0x7F => Rra(AbsoluteX(false)),
            0x7B => Rra(AbsoluteY(false)),
            0x63 => Rra(IndirectX),
            0x73 => Rra(IndirectY(false)),
            0x0B | 0x2B => Aac(Immediate),
            0x4B => Asr(Immediate),
            0x6B => Arr(Immediate),
            0xAB => Atx(Immediate),
            0xCB => Axs(Immediate),
            0x9C => Sa(Y, AbsoluteX(false)),
            0x9E => Sa(X, AbsoluteY(false)),
            _ => BadOP(op),
        }
    }
}